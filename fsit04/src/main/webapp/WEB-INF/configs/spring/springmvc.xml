<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!-- 配置不會被過濾的靜態支援檔案 -->
<!-- 	<mvc:resources mapping="/resource/i18n/**" location="/resource/i18n/"/> -->
	<mvc:resources mapping="./script/**" location="/script/"/>
	<mvc:annotation-driven/>
    <!-- 配置自動掃描package底下的annotation-->
    <context:component-scan base-package="org.iii.www">
    	<!-- 掃描org.iii.www.util底下的@Aspect 動態代理 -->
    	<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"/> 
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
	<aop:aspectj-autoproxy/>
	<!-- 使用cookie 實現i18n -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />
	<mvc:interceptors>
		<mvc:interceptor>
		    <mvc:mapping path="/**" />	<!-- 攔截路徑 -->
		    <mvc:exclude-mapping path="/css/*" /> <!-- 設定不攔截 -->
		    <mvc:exclude-mapping path="/imgs/*" /> <!-- 設定不攔截 -->
		    <mvc:exclude-mapping path="/script/*" /> <!-- 設定不攔截 -->
		    <mvc:exclude-mapping path="/tourism" /> <!-- 設定不攔截 -->
		    <bean class="org.iii.www.util.PermissionInterceptor" />
	   </mvc:interceptor>
	   <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />	
	</mvc:interceptors>
	
	
    <!-- 配置View解析器 如何把 handler 方法返回值轉換為View，jsp路径的前缀和後缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
	<!-- 上傳檔案 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
    <task:annotation-driven executor="myExecutor"/>
    <!-- @Async("myExecutor")可以指定executor为"myExecutor"-->
    <task:executor id="myExecutor"
               pool-size="5-25"
               queue-capacity="100"
               rejection-policy="CALLER_RUNS"/>
    <!--  静態資源交给預設的Servlet-->
    <mvc:default-servlet-handler/>
    <!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
    mvc:annotation-driven默认加载很多的参数绑定方法，
	    比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	    实际开发时使用mvc:annotation-driven
     -->
    <mvc:annotation-driven/>
</beans>